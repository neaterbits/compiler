/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_neaterbits_runtime__native_NativeMethods */

#ifndef _Included_com_neaterbits_runtime__native_NativeMethods
#define _Included_com_neaterbits_runtime__native_NativeMethods
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    getReferenceSizeInBytes
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_getReferenceSizeInBytes
  (JNIEnv *, jclass);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    alloc
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_alloc
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    allocExecutablePages
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_allocExecutablePages
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    realloc
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_realloc
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    clear
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_clear
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    setReference
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_setReference
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    getReference
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_getReference
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    putString
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_putString
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    putBytes
 * Signature: (JI[BII)V
 */
JNIEXPORT void JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_putBytes
  (JNIEnv *, jclass, jlong, jint, jbyteArray, jint, jint);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    runCode
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_runCode
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    getMemoryAddress
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_getMemoryAddress
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_neaterbits_runtime__native_NativeMethods
 * Method:    getFunctionAddress
 * Signature: (Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_neaterbits_runtime__1native_NativeMethods_getFunctionAddress
  (JNIEnv *, jclass, jstring, jstring);

#ifdef __cplusplus
}
#endif
#endif
